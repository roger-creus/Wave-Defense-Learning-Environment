Traceback (most recent call last):
  File ".\wave_defense\dqn.py", line 259, in <module>
    loss = train(policy_net, target_net, optimizer, memory, hparams['batch_size'], hparams['gamma'])
  File ".\wave_defense\dqn.py", line 139, in train
    state_action_values = policy_net(state_batch).gather(1, action_batch)
  File "C:\Users\PC\anaconda3\envs\ballsort3.7\lib\site-packages\torch\nn\modules\module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File ".\wave_defense\dqn.py", line 83, in forward
    x = preprocess_images(x)
  File ".\wave_defense\dqn.py", line 35, in preprocess_images
    x = transform(x).squeeze(1).unsqueeze(0)
  File "C:\Users\PC\anaconda3\envs\ballsort3.7\lib\site-packages\torchvision\transforms\transforms.py", line 61, in __call__
    img = t(img)
  File "C:\Users\PC\anaconda3\envs\ballsort3.7\lib\site-packages\torch\nn\modules\module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\Users\PC\anaconda3\envs\ballsort3.7\lib\site-packages\torchvision\transforms\transforms.py", line 1514, in forward
    return F.rgb_to_grayscale(img, num_output_channels=self.num_output_channels)
  File "C:\Users\PC\anaconda3\envs\ballsort3.7\lib\site-packages\torchvision\transforms\functional.py", line 1171, in rgb_to_grayscale
    return F_t.rgb_to_grayscale(img, num_output_channels)
  File "C:\Users\PC\anaconda3\envs\ballsort3.7\lib\site-packages\torchvision\transforms\functional_tensor.py", line 138, in rgb_to_grayscale
    _assert_channels(img, [3])
  File "C:\Users\PC\anaconda3\envs\ballsort3.7\lib\site-packages\torchvision\transforms\functional_tensor.py", line 55, in _assert_channels
    raise TypeError("Input image tensor permitted channel values are {}, but found {}".format(permitted, c))
TypeError: Input image tensor permitted channel values are [3], but found 128